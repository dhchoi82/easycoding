<h4>Integer Arithmetic</h4>
<p>
    Python을 이용해서 숫자를 계산하고 출력할 수 있습니다.
</p>
<pre><code>#!/usr/bin/python3
print(53) # 숫자 출력
print(2+3) # 덧셈
print(2-3) # 뺄셈
print(2*3) # 곱셈
print(5/2) # 나눗셈
print(5//2) # 몫
print(5%2) # 나머지
print(3**2) # 거듭제곱
</code></pre>
<p>
    실행해보면 아래와 같이 계산 결과가 화면에 출력됩니다.
</p>
<pre>
53
5
-1
6
2.5
2
1
9
</pre>

<h4>Floating-point Arithmetic</h4>
<p>
    1과 1.0처럼 소숫점 아래의 숫자가 있고 없는 경우에 Python은 이 숫자들을 조금 다르게 취급합니다.
</p>
<pre><code>#!/usr/bin/python3
print(5.3) # 숫자 출력
print(2.0+3.0) # 덧셈
print(2.0-3.0) # 뺄셈
print(2.0*3.0) # 곱셈
print(5.0/2.0) # 나눗셈
print(5.0//2.0) # 몫
print(5.0%2.0) # 나머지
print(3.0**2.0) # 거듭제곱
print(type(3.2)) # 소숫점이 있는 숫자의 type
print(type(3)) # 소숫점이 없는 숫자의 type
</code></pre>
<p>
    실행해보면 아래와 같은 결과가 화면에 출력됩니다.
</p>
<pre>
5.3
5.0
-1.0
6.0
2.5
2.0
1.0
9.0
&lt;class 'float'&gt;
&lt;class 'int'&gt;
</pre>

<h4>Complex Number</h4>
<p>
    Python에서는 허수단위 j를 이용해서 복소수를 사용할 수 있습니다.
</p>
<pre><code>#!/usr/bin/python3
print(2+1j) # 복소수 출력
print(type(2+1j)) # 복소수 type
print((2+1j).real) # 실수부
print((2+1j).imag) # 허수부
print((2+1j)+(3-2j)) # 덧셈
print((2+1j)*(3-2j)) # 곱셈
</code></pre>
<p>
    실행해보면 아래와 같은 결과가 화면에 출력됩니다.
</p>
<pre>
(2+1j)
&lt;class 'complex'&gt;
2.0
1.0
(5-1j)
(8-1j)
</pre>